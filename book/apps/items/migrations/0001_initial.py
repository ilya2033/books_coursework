# Generated by Django 3.1.2 on 2020-11-27 02:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('text', models.TextField(verbose_name='Text')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(verbose_name='Text')),
                ('comment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_title', models.CharField(max_length=200, verbose_name='Title')),
                ('item_other_title', models.CharField(blank=True, max_length=200, verbose_name='Other_title')),
                ('item_desc', models.TextField(verbose_name='Description')),
                ('item_image', models.ImageField(upload_to='', verbose_name='Image')),
                ('item_title_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Title_image')),
                ('item_likes', models.IntegerField(default=0, verbose_name='Likes')),
                ('item_date', models.DateField(default=django.utils.timezone.now)),
                ('item_chapters_rus', models.IntegerField(default=0, verbose_name='rus_chapters')),
                ('item_status', models.CharField(choices=[('Продолжается', 'Countinue'), ('Законченно', 'Finish'), ('Замороженно', 'Frozen'), ('Неизвестно', 'Unknown')], default='Неизвестно', max_length=50, verbose_name='status')),
                ('last_upd', models.DateTimeField()),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumes', to='items.item')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField(verbose_name='Text')),
                ('Chapter', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='item', chained_model_field='item', on_delete=django.db.models.deletion.CASCADE, to='items.chapter')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='items.item')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='items.comment')),
                ('users', models.ManyToManyField(related_name='requirement_comment_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='items.item'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='items.comment'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='items.item'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='volume',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='item', chained_model_field='item', on_delete=django.db.models.deletion.CASCADE, to='items.volume'),
        ),
    ]
